generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Asignatura {
  id_asignatura             Int                         @id(map: "PK_asignatura") @default(autoincrement())
  cod_asignatura            String                      @unique(map: "UQ_asignatura_cod_asignatura") @db.NVarChar(6)
  nombre_asignacion         String                      @db.NVarChar(200)
  id_tipo_asignatura        Int
  creditos                  Int
  visible                   Boolean
  fecha_creacion            DateTime                    @default(now(), map: "DF_asignatura_fecha_creacion") @db.DateTime
  Tipos_Asignatura          Tipos_Asignatura            @relation(fields: [id_tipo_asignatura], references: [id_tipo_asignatura], onUpdate: NoAction, map: "FK_asignatura_id_tipo_asignatura")
  Asignaturas_Seleccionadas Asignaturas_Seleccionadas[]
  Seccion                   Seccion[]
}

model Asignaturas_Seleccionadas {
  id_registro           Int                   @id(map: "PK_asignaturas_seleccionadas") @default(autoincrement())
  id_seccion            Int
  id_asignatura         Int
  id_estudiante         Int
  id_trimestre          Int
  fecha_creacion        DateTime              @default(now(), map: "DF_asignaturas_seleccionadas_fecha_creacion") @db.DateTime
  calificacion_num      Decimal               @db.Decimal(4, 2)
  Asignatura            Asignatura            @relation(fields: [id_asignatura], references: [id_asignatura], onUpdate: NoAction, map: "FK_asignaturas_seleccionadas_id_asignatura")
  Usuario               Usuario               @relation(fields: [id_estudiante], references: [id_usuario], onUpdate: NoAction, map: "FK_asignaturas_seleccionadas_id_estudiante")
  Seccion               Seccion               @relation(fields: [id_seccion], references: [id_seccion], onUpdate: NoAction, map: "FK_asignaturas_seleccionadas_id_seccion")
  Inicio_Fin_Trimestres Inicio_Fin_Trimestres @relation(fields: [id_trimestre], references: [id_trimestre], onUpdate: NoAction, map: "FK_asignaturas_seleccionadas_id_trimestre")
}

model Carreras {
  id_carrera     Int       @id(map: "PK_carreras") @default(autoincrement())
  nombre_carrera String    @db.NVarChar(200)
  fecha_creacion DateTime  @default(now(), map: "DF_carreras_fecha_creacion") @db.DateTime
  Usuario        Usuario[]
}

model Credenciales_Usuario {
  id_registro     Int      @id(map: "PK_credenciales_usuario") @default(autoincrement())
  id_usuario      Int
  hash_contrasena String   @db.NVarChar(Max)
  fecha_creacion  DateTime @default(now(), map: "DF_credenciales_usuario_fecha_creacion") @db.DateTime
  Usuario         Usuario  @relation(fields: [id_usuario], references: [id_usuario], onUpdate: NoAction, map: "FK_credenciales_usuario_id_usuario")
}

model Estado {
  id_estado      Int       @id(map: "PK_estado") @default(autoincrement())
  nombre_estado  String    @db.NVarChar(200)
  fecha_creacion DateTime  @default(now(), map: "DF_estado_fecha_creacion") @db.DateTime
  Usuario        Usuario[]
}

model Inicio_Fin_Trimestres {
  id_trimestre              Int                         @id(map: "PK_inicio_fin_trimestres") @default(autoincrement())
  fecha_inicio              DateTime                    @db.DateTime
  fecha_fin                 DateTime                    @db.DateTime
  id_tipo_trimestre         Int
  ano_trimestre             String                      @db.NVarChar(6)
  fecha_creacion            DateTime                    @default(now(), map: "DF_inicio_fin_trimestres_fecha_creacion") @db.DateTime
  Asignaturas_Seleccionadas Asignaturas_Seleccionadas[]
  Tipo_Trimestres           Tipo_Trimestres             @relation(fields: [id_tipo_trimestre], references: [id_tipo_trimestre], onUpdate: NoAction, map: "FK_inicio_fin_trimestres_id_tipo_trimestre")
}

model Modalidad {
  id_modalidad     Int       @id(map: "PK_modalidad") @default(autoincrement())
  nombre_modalidad String    @db.NVarChar(200)
  fecha_creacion   DateTime  @default(now(), map: "DF_modalidad_fecha_creacion") @db.DateTime
  Seccion          Seccion[]
}

model Notas_Letras {
  id_registro        Int      @id(map: "PK_notas_letras") @default(autoincrement())
  limit_superior     Int
  limit_inferior     Int
  letra_equivalencia String   @db.NVarChar(3)
  fecha_creacion     DateTime @default(now(), map: "DF_notas_letras_fecha_creacion") @db.DateTime
}

model Rol {
  id_rol         Int       @id(map: "PK_rol") @default(autoincrement())
  nombre_rol     String    @db.NVarChar(200)
  fecha_creacion DateTime  @default(now(), map: "DF_rol_fecha_creacion") @db.DateTime
  Usuario        Usuario[]
}

model Seccion {
  id_seccion                Int                         @id(map: "PK_seccion") @default(autoincrement())
  id_asignatura             Int
  id_modalidad              Int
  id_profesor               Int
  num_seccion               Int                         @unique(map: "UQ_seccion_num_seccion")
  fecha_creacion            DateTime                    @default(now(), map: "DF_seccion_fecha_creacion") @db.DateTime
  Asignaturas_Seleccionadas Asignaturas_Seleccionadas[]
  Asignatura                Asignatura                  @relation(fields: [id_asignatura], references: [id_asignatura], onUpdate: NoAction, map: "FK_seccion_id_asignatura")
  Modalidad                 Modalidad                   @relation(fields: [id_modalidad], references: [id_modalidad], onUpdate: NoAction, map: "FK_seccion_id_modalidad")
  Usuario                   Usuario                     @relation(fields: [id_profesor], references: [id_usuario], onUpdate: NoAction, map: "FK_seccion_id_profesor")
}

model Tipo_Trimestres {
  id_tipo_trimestre     Int                     @id(map: "PK_tipo_trimestres") @default(autoincrement())
  nombre_trimestre      String                  @db.NVarChar(200)
  fecha_creacion        DateTime                @default(now(), map: "DF_tipo_trimestres_fecha_creacion") @db.DateTime
  Inicio_Fin_Trimestres Inicio_Fin_Trimestres[]
}

model Tipos_Asignatura {
  id_tipo_asignatura     Int          @id(map: "PK_tipos_asignatura") @default(autoincrement())
  nombre_tipo_asignatura String       @db.NVarChar(200)
  fecha_creacion         DateTime     @default(now(), map: "DF_tipos_asignatura_fecha_creacion") @db.DateTime
  Asignatura             Asignatura[]
}

model Usuario {
  id_usuario                Int                         @id(map: "PK_usuario") @default(autoincrement())
  nombre_usuario            String                      @db.NVarChar(200)
  id_rol                    Int
  matricula                 Int                         @unique(map: "UQ_usuario_matricula")
  fecha_nac                 DateTime                    @db.DateTime
  id_estado                 Int
  email                     String                      @db.NVarChar(150)
  fecha_creacion            DateTime                    @default(now(), map: "DF_usuario_fecha_ingreso") @db.DateTime
  id_carrera_est            Int
  indice_acad_est           Decimal                     @db.Decimal(5, 3)
  Asignaturas_Seleccionadas Asignaturas_Seleccionadas[]
  Credenciales_Usuario      Credenciales_Usuario[]
  Seccion                   Seccion[]
  Carreras                  Carreras                    @relation(fields: [id_carrera_est], references: [id_carrera], onUpdate: NoAction, map: "FK_usuario_id_carrera_est")
  Estado                    Estado                      @relation(fields: [id_estado], references: [id_estado], onUpdate: NoAction, map: "FK_usuario_id_estado")
  Rol                       Rol                         @relation(fields: [id_rol], references: [id_rol], onUpdate: NoAction, map: "FK_usuario_id_rol")
}
